###Computing probabilities
#The where9am data frame contains 91 days (thirteen weeks) worth of data in which Brett recorded his location at 9am each day as well as whether the daytype was a weekend or weekday.
#Using the conditional probability formula below, you can compute the probability that Brett is working in the office, given that it is a weekday.
#Calculations like these are the basis of the Naive Bayes destination prediction model you'll develop in later exercises.

# Compute P(A) 
p_A <- nrow(subset(where9am, location=="office"))/nrow(where9am)

# Compute P(B)
p_B <- nrow(subset(where9am, daytype=="weekday"))/nrow(where9am)

# Compute the observed P(A and B)
p_AB <- nrow(subset(where9am, daytype=="weekday"&location=="office"))/nrow(where9am)

# Compute P(A | B) and print its value
p_A_given_B <- p_AB/p_B
p_A_given_B

###A simple Naive Bayes location model
#The previous exercises showed that the probability that Brett is at work or at home at 9am is highly dependent on whether it is the weekend or a weekday.
#To see this finding in action, use the where9am data frame to build a Naive Bayes model on the same data.
#You can then use this model to predict the future: where does the model think that Brett will be at 9am on Thursday and at 9am on Saturday?

# Load the naivebayes package
library(naivebayes)

# Build the location prediction model
locmodel <- naive_bayes(location ~ daytype, data = where9am)

# Predict Thursday's 9am location
predict(locmodel, thursday9am)

# Predict Saturdays's 9am location
predict(locmodel, saturday9am)

###Examining "raw" probabilities
#The naivebayes package offers several ways to peek inside a Naive Bayes model.
#Typing the name of the model object provides the a priori (overall) and conditional probabilities of each of the model's predictors. If one were so inclined, you might use these for calculating posterior (predicted) probabilities by hand.

# The 'naivebayes' package is loaded into the workspace
# and the Naive Bayes 'locmodel' has been built

# Examine the location prediction model
print(locmodel)

# Obtain the predicted probabilities for Thursday at 9am
predict(locmodel, thursday9am , type = "prob")

# Obtain the predicted probabilities for Saturday at 9am
predict(locmodel, saturday9am , type = "prob")

###A more sophisticated location model
#The locations dataset records Brett's location every hour for 13 weeks. Each hour, the tracking information includes the daytype (weekend or weekday) as well as the hourtype (morning, afternoon, evening, or night).

# Build a NB model of location
locmodel <- naive_bayes(location ~ daytype +hourtype, data=locations)

# Predict Brett's location on a weekday afternoon
predict(locmodel, weekday_afternoon)

# Predict Brett's location on a weekday evening
predict(locmodel, weekday_evening)

###Preparing for unforeseen circumstances
#While Brett was tracking his location over 13 weeks, he never went into the office during the weekend. Consequently, the joint probability of P(office and weekend) = 0.
#Explore how this impacts the predicted probability that Brett may go to work on the weekend in the future. Additionally, you can see how using the Laplace correction will allow a small chance for these types of unforeseen circumstances

# Observe the predicted probabilities for a weekend afternoon
predict(locmodel, weekend_afternoon, type="prob")

# Build a new model using the Laplace correction
locmodel2 <- naive_bayes(location ~ daytype+hourtype, data=locations, laplace=1)

# Observe the new predicted probabilities for a weekend afternoon
predict(locmodel2, weekend_afternoon, type="prob")




